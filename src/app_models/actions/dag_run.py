from datetime import datetime
from appmodels.airflow.dag import Dag

from typing import Optional
from sqlmodel import Column, Relationship, SQLModel, Field, String



# BASE
class DagRunBase(SQLModel):
    dag_run_id: str = Field(..., max_length=150, description="Dag run ID as generated by airflow, looks like a datetime", sa_column=Column("dag_run_id", String, unique=True))
    dag_id: int = Field(..., foreign_key="dag.id")
    start_date: datetime
    end_date: Optional[datetime]
    state: str = Field(..., max_length=150)
    
  
    
# DB
class DagRun(DagRunBase, table=True):
    __tablename__ = "dag_run"
    id: Optional[int] = Field(default=None, primary_key=True)
    dag: Dag = Relationship(back_populates="runs")
# VIEWS


class DagRunCreate(DagRunBase):
    pass

class DagRunGet(SQLModel):
    id: Optional[int] = Field(default=None, primary_key=True)
    
    
class DagRunUpdate(DagRunBase):
    id: Optional[int] = Field(default=None, primary_key=True)
